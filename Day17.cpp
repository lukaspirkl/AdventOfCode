#include "pch.h"
#include "aoc.h"
#include "intcode.h"

namespace
{
	TEST(Day17, InputA)
	{
		auto input = aoc::splitLongLong(aoc::readInputFile("Day17.txt").str());
		//input[0] = 2;
		aoc::intcode intcode(input);

		std::vector<std::vector<char>> map;
		map.push_back(std::vector<char>());

		bool running = true;
		while (running)
		{
			aoc::intcode::result result = intcode.run();
			switch (result)
			{
			case aoc::intcode::result::inputRequested:
				throw std::exception("Input");
				break;
			case aoc::intcode::result::outputProvided:
				if (intcode.io == 10)
				{
					map.push_back(std::vector<char>());
				}
				else
				{
					map.back().push_back((char)intcode.io);
				}
				break;
			case aoc::intcode::result::programEnded:
				running = false;
				break;
			default:
				throw std::exception("Unknown intcode result");
				break;
			}
		}

		while (map.back().size() == 0) 
		{
			map.pop_back();
		}

		size_t sum = 0;
		std::stringstream ss;
		for (size_t y = 0; y < map.size(); y++)
		{
			ss << '\n';
			for (size_t x = 0; x < map[y].size(); x++)
			{
				if (y != 0 && x != 0 && y != map.size() - 1 && x != map[y].size() - 1)
				{
					if (map[y][x] == '#' && map[y + 1][x] == '#' && map[y - 1][x] == '#' && map[y][x + 1] == '#' && map[y][x - 1] == '#')
					{
						sum += x * y;
					}
				}
				ss << map[y][x];
			}
		}

		auto s = ss.str();
		EXPECT_EQ(sum, 10064);
	}

	TEST(Day17, InputB)
	{
		auto input = aoc::splitLongLong(aoc::readInputFile("Day17.txt").str());
		input[0] = 2;
		aoc::intcode intcode(input);

		std::string path = "A,A,B,C,B,C,B,C,B,A\nL,10,L,8,R,8,L,8,R,6\nR,6,R,8,R,8\nR,6,R,6,L,8,L,10\nn\n";
		int i = 0;
		bool running = true;
		while (running)
		{
			aoc::intcode::result result = intcode.run();
			switch (result)
			{
			case aoc::intcode::result::inputRequested:
				intcode.io = path[i];
				i++;
				break;
			case aoc::intcode::result::outputProvided:
				break;
			case aoc::intcode::result::programEnded:
				running = false;
				break;
			default:
				throw std::exception("Unknown intcode result");
				break;
			}
		}
		
		EXPECT_EQ(intcode.io, 1197725);
	}
}



/*
..............##########^..............................
..............#........................................
..............#........................................
..............#........................................
..............#........................................
..............#........................................
..............#........................................
..............#........................................
......#########........................................
......#................................................
......#................................................
......#................................................
......#................................................
......#................................................
......#................................................
......#................................................
#######................................................
#......................................................
#......................................................
#......................................................
#...............................................#######
#...............................................#......
#...............................................#......
#...............................................#......
#...............................................#......
#...............................................#......
#########.......................................#......
........#.......................................#......
........#.............#########.........#########......
........#.............#.......#.........#..............
........#.............#.......#.........#..............
........#.............#.......#.........#..............
........#.#########...#.......#.........#..............
........#.#.......#...#.......#.........#..............
........#########.#...###########.......#..............
..........#.....#.#...........#.#.......#..............
..........#.....#.#...........###########..............
..........#.....#.#.............#......................
..........#.#######.............#......................
..........#.#...#...............#......................
..........#######...........#######....................
............#...............#...#.#....................
............#.............#######.#....................
............#.............#.#.....#....................
............#.#######.....#.#.....#....................
............#.#.....#.....#.#.....#....................
............###########...#.#.....#....................
..............#.....#.#...#.#.....#....................
..............#.....#.#...#########....................
..............#.....#.#.....#..........................
..............#.....#########..........................
..............#.......#................................
..............#########................................

L,10,L,8,R,8,L,8,R,6,
L,10,L,8,R,8,L,8,R,6,
R,6,R,8,R,8,
R,6,R,6,L,8,L,10,
R,6,R,8,R,8,
R,6,R,6,L,8,L,10,
R,6,R,8,R,8,
R,6,R,6,L,8,L,10,
R,6,R,8,R,8,
L,10,L,8,R,8,L,8,R,6,

Main: A,A,B,C,B,C,B,C,B,A
A: L,10,L,8,R,8,L,8,R,6
B: R,6,R,8,R,8
C: R,6,R,6,L,8,L,10
*/